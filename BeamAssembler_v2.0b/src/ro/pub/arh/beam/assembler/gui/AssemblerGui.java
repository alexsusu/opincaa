/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AssemblerGui.java
 *
 * Created on 03.07.2009, 16:22:36
 */

package ro.pub.arh.beam.assembler.gui;

import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.filechooser.FileFilter;
import ro.pub.arh.beam.assembler.Assembler;
import ro.pub.arh.beam.structs.Program;
import ro.pub.arh.beam.assembler.gui.panels.*;
import ro.pub.arh.beam.utils.gui.ConsolePrintStream;
import ro.pub.arh.beam.hardware.emulator.Emulator;
import ro.pub.arh.beam.execution.gui.ExecutionGui;
import ro.pub.arh.beam.execution.gui.StatisticsGui;
import ubiCORE.jroot.common.utils.ErrorCode;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JSplitPane;
import javax.swing.UIManager;
import ro.pub.arh.beam.common.ImageUtils;
import ro.pub.arh.beam.hardware.ExecutionEnvironment;
import ro.pub.arh.beam.hardware.fpga.network.FPGAConnectionClient;
import ro.pub.arh.beam.hardware.simulator.Simulator;
import ro.pub.arh.beam.linker.Linker;
//import ro.pub.arh.beam.communication.SerialInterface;
/**
 *
 * @author Ares
 */
public class AssemblerGui extends javax.swing.JFrame {

    public static final String VERSION = "0.1b";
    public static final String TITLE = "Connex System Assembler " + VERSION;
    public static final String LINUX_OS_ID = "Linux";

    private int currentNewFileIndex;
    private PrintStream consoleStream;
    private ExecutionGui executionGui;
    private StatisticsGui statisticsWindow;
    private Linker linker;
    private boolean listSelected;

    public FPGAConnectionClient client;
    private static final boolean FPGA_CONNECTED = true;
    private static final boolean FPGA_DISCONNECTED = false;

    /** Creates new form AssemblerGui */
    public AssemblerGui() {
        initComponents();
        setTitle(TITLE);
        currentNewFileIndex = 0;
        jTabbedPane1.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);
        consoleStream = new PrintStream(new ConsolePrintStream(jTextPane1));
        jMenuItem10.setEnabled(false);
        System.setOut(consoleStream);
        jFileChooser1.setDialogTitle("Open new source file");
        jFileChooser1.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f){
                return f.getAbsolutePath().endsWith(".asm") || f.isDirectory() ||
                        f.getAbsolutePath().endsWith(".s") || f.getAbsolutePath().endsWith(".c")
                         || f.getAbsolutePath().endsWith(".cpp");
            }

            @Override
            public String getDescription(){
                return ".asm, .s, .c, .cpp";
            }
        });
        jFileChooser1.setCurrentDirectory(GuiConfig.config.DIRECTORY_PATH);
        reopenFiles();
        executionGui = new ExecutionGui();
        //readSerialPorts();
        buttonGroup1.add(jRadioButton2);
        buttonGroup1.add(jRadioButton1);
        this.setBounds(GuiConfig.config.size);
        this.setExtendedState(GuiConfig.config.state);
        jDialog6.setLocationRelativeTo(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser(new File("."));
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jDialog1 = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jDialog2 = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialog3 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        jDialog5 = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton10 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItem19 = new javax.swing.JMenuItem();
        jDialog6 = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel18 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jButton20 = new javax.swing.JButton();
        jDialog4 = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem27 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem29 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem34 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem26 = new javax.swing.JMenuItem();
        jMenuItem28 = new javax.swing.JMenuItem();
        jMenuItem31 = new javax.swing.JMenuItem();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenuItem32 = new javax.swing.JMenuItem();
        jMenuItem33 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem30 = new javax.swing.JMenuItem();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        jMenuItem14.setText("Save");
        jMenuItem14.setToolTipText("Saves the current document");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem14);

        jMenuItem15.setText("Close");
        jMenuItem15.setToolTipText("Closes the current document");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem15);

        jDialog1.setTitle("Serial Config");
        jDialog1.setAlwaysOnTop(true);
        jDialog1.setModal(true);
        jDialog1.setResizable(false);

        jLabel1.setText("Baud Rate:");

        jLabel3.setText("Stop Bits:");

        jLabel4.setText("Parity:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "9600", "19200", "38400", "57600", "115200" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "6", "7", "8" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "1.5", "2" }));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EVEN", "MARK", "NONE", "ODD", "SPACE" }));

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Ok");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Flow Ctrl:");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NONE", "RTSCTS_IN", "RTSCTS_OUT", "XONXOFF_IN", "XONXOFF_OUT" }));

        jLabel6.setText("Serial port:");

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2))
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.Alignment.TRAILING, 0, 129, Short.MAX_VALUE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, 0, 129, Short.MAX_VALUE)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.Alignment.TRAILING, 0, 129, Short.MAX_VALUE)
                                    .addComponent(jComboBox5, javax.swing.GroupLayout.Alignment.TRAILING, 0, 129, Short.MAX_VALUE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, 129, Short.MAX_VALUE)
                                    .addComponent(jComboBox6, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel5)))
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 308, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGap(7, 7, 7)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(55, 55, 55)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog1.pack();

        jDialog2.setTitle("Select File Type");
        jDialog2.setAlwaysOnTop(true);
        jDialog2.setModal(true);
        jDialog2.setResizable(false);

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("C Source");

        jRadioButton2.setText("ASM Source");

        jButton3.setText("Ok");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jRadioButton1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jRadioButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jDialog2.pack();

        jDialog3.setTitle("Compiler settings");
        jDialog3.setAlwaysOnTop(true);
        jDialog3.setModal(true);
        jDialog3.setResizable(false);

        jLabel7.setText("cc1 executable path:");

        jButton5.setText("Browse");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel8.setText("Optimization level:");

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3" }));

        jButton6.setText("Cancel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Ok");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel11.setText("Firmare stack size:");

        jTextField3.setText("128k");

        jLabel15.setText("Include directory:");

        jButton15.setText("Browse");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(305, 305, 305)
                        .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton15)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                            .addComponent(jButton5)))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(101, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addContainerGap(156, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog3.pack();

        jDialog5.setTitle("Select Files to Assemble");
        jDialog5.setMinimumSize(new java.awt.Dimension(664, 325));
        jDialog5.setModal(true);

        jScrollPane2.setViewportView(jList1);

        jScrollPane3.setViewportView(jList2);

        jButton10.setText("--->");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel12.setText("Select files for execution:");

        jButton11.setText("<---");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Cancel");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Ok");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel13.setText("Available:");

        jLabel14.setText("Selected:");

        jButton14.setText("--->>");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton16.setText("Add File");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 488, Short.MAX_VALUE)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 369, Short.MAX_VALUE)
                            .addComponent(jLabel14)
                            .addGap(95, 95, 95))
                        .addComponent(jLabel12)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(228, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton13))
                .addGap(40, 40, 40))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(jLabel14)
                                .addComponent(jButton16))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                            .addGap(72, 72, 72)
                            .addComponent(jButton10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton14)))
                    .addContainerGap(95, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jDialog5Layout = new javax.swing.GroupLayout(jDialog5.getContentPane());
        jDialog5.getContentPane().setLayout(jDialog5Layout);
        jDialog5Layout.setHorizontalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog5Layout.setVerticalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        //jDialog5.pack();

        jMenuItem19.setText("Clear");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jMenuItem19);

        jDialog6.setTitle("Link settings");
        jDialog6.setAlwaysOnTop(true);
        jDialog6.setModal(true);
        jDialog6.setResizable(false);

        jButton17.setText("Cancel");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("Ok");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jLabel16.setText("Link against:");

        jCheckBox1.setText("malloc.s");

        jCheckBox2.setText("pthread.s");

        jCheckBox3.setText("stdio.s");

        jLabel18.setText("Library folder:");

        jButton20.setText("Browse");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton17)
                        .addGap(305, 305, 305)
                        .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                    .addComponent(jLabel16)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox3)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton20)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addGap(42, 42, 42)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton17)
                    .addComponent(jButton18))
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog6Layout = new javax.swing.GroupLayout(jDialog6.getContentPane());
        jDialog6.getContentPane().setLayout(jDialog6Layout);
        jDialog6Layout.setHorizontalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog6Layout.setVerticalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog6.pack();

        jDialog4.setTitle("FPGA Server Options");
        jDialog4.setResizable(false);

        jLabel9.setText("Server address:");

        jTextField2.setText("phd2.arh.pub.ro");

        jTextField5.setText("9001");

        jLabel10.setText("Server port:");

        jButton8.setText("Ok");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Cancel");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 251, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog4.pack();

        setTitle("IMTH Assembler v0.2b");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jSplitPane1.setBorder(new javax.swing.border.MatteBorder(null));
        jSplitPane1.setDividerLocation(GuiConfig.config.dividerLocation);
        jSplitPane1.setDividerSize(10);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSplitPane1PropertyChange(evt);
            }
        });

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });
        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentShown(evt);
            }
        });
        jSplitPane1.setLeftComponent(jTabbedPane1);

        jTextPane1.setEditable(false);
        jTextPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextPane1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTextPane1);

        jSplitPane1.setRightComponent(jScrollPane1);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("New");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Open");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Save");
        jMenuItem3.setEnabled(false);
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Save As");
        jMenuItem4.setEnabled(false);
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem10.setText("Close");
        jMenuItem10.setEnabled(false);
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem5.setText("Exit");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenu2.setEnabled(false);

        jMenuItem16.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem16.setText("Undo");
        jMenuItem16.setEnabled(false);
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem16);

        jMenuItem17.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem17.setText("Redo");
        jMenuItem17.setEnabled(false);
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem17);
        jMenu2.add(jSeparator1);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Copy");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem12.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem12.setText("Cut");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setText("Paste");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);
        jMenu2.add(jSeparator2);

        jMenuItem23.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem23.setText("Find");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem23);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("View");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Line numbers");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jCheckBoxMenuItem1);

        jMenuItem27.setText("Serial Window");
        jMenuItem27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem27ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem27);

        jMenuItem21.setText("Statistics Window");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem21);

        jMenuItem18.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem18.setText("Refresh");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem18);

        jCheckBoxMenuItem2.setSelected(GuiConfig.config.highLightEnabled);
        jCheckBoxMenuItem2.setText("Highlights");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu5.add(jCheckBoxMenuItem2);

        jMenuBar1.add(jMenu5);

        jMenu7.setText("Run");
        jMenu7.setEnabled(false);

        jMenuItem29.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        jMenuItem29.setText("Compile");
        jMenuItem29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem29ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem29);

        jMenuItem8.setText("Generate Files");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem8);

        jMenuItem20.setText("Emulate");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem20);

        jMenuItem11.setText("Simulate");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem11);

        jMenuItem34.setText("Decode PNG");
        jMenuItem34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem34ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem34);

        jMenuBar1.add(jMenu7);

        jMenu8.setText("FPGA");

        jMenuItem26.setText("Connect");
        jMenuItem26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem26ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem26);

        jMenuItem28.setText("Disconnect");
        jMenuItem28.setEnabled(false);
        jMenuItem28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem28ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem28);

        jMenuItem31.setText("Load Image");
        jMenuItem31.setEnabled(false);
        jMenuItem31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem31ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem31);

        jMenuItem24.setText("Load Binary");
        jMenuItem24.setEnabled(false);
        jMenuItem24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem24ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem24);

        jMenuItem32.setText("Save Image");
        jMenuItem32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem32ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem32);

        jMenuItem33.setText("Reset");
        jMenuItem33.setEnabled(false);
        jMenuItem33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem33ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem33);

        jMenuItem25.setText("Options");
        jMenuItem25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem25ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem25);

        jMenuBar1.add(jMenu8);

        jMenu4.setText("Options");

        jMenuItem30.setText("Compiler Options");
        jMenuItem30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem30ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem30);

        jMenuItem22.setText("Link Options");
        jMenuItem22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem22ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem22);

        jMenuBar1.add(jMenu4);

        jMenu3.setText("Help");

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem13.setText("Help");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem13);

        jMenuItem9.setText("About");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        jDialog2.setLocationRelativeTo(this);
        jDialog2.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        File _file;
        int _result = jFileChooser1.showOpenDialog(this);
        _file = jFileChooser1.getSelectedFile();
        try {
            if(_result == JFileChooser.APPROVE_OPTION){
                String _tabTitle = _file.getCanonicalPath();
                _tabTitle = _tabTitle.lastIndexOf(File.separator) == -1 ? _tabTitle : _tabTitle.substring(_tabTitle.lastIndexOf(File.separator) + 1);
                CodePanel _panel = null;
                if(_tabTitle.endsWith(".c") || _tabTitle.endsWith(".cpp")){
                     _panel = new CCodePanel(this, _file.getAbsolutePath());
                }else{
                    _panel = new AsmCodePanel(this, _file.getAbsolutePath());
                }
                jTabbedPane1.add(_panel, _tabTitle);
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount() - 1);
                toggleNoWindowsMenus(true);
                _panel.setLineNumbersVisible(jCheckBoxMenuItem1.getState());
                updateTitle();
            }
        }catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            String _newTabTitle = ((CodePanel)jTabbedPane1.getSelectedComponent()).saveFile();
            if (_newTabTitle != null){
                _newTabTitle = _newTabTitle.lastIndexOf(File.separator) == -1 ? _newTabTitle : _newTabTitle.substring(_newTabTitle.lastIndexOf(File.separator) + 1);
                int _index = jTabbedPane1.getSelectedIndex();
                jTabbedPane1.setTitleAt(_index, _newTabTitle);
                updateTitle();
            }
        }catch (IOException ex) {
            Logger.getLogger(AssemblerGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            String _newTabTitle = ((CodePanel)jTabbedPane1.getSelectedComponent()).saveFileAs();
            if (_newTabTitle != null){
                _newTabTitle = _newTabTitle.lastIndexOf(File.separator) == -1 ? _newTabTitle : _newTabTitle.substring(_newTabTitle.lastIndexOf(File.separator) + 1);
                int _index = jTabbedPane1.getSelectedIndex();
                jTabbedPane1.setTitleAt(_index, _newTabTitle);
                updateTitle();
            }
        }catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        if(closeProgram()){
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        if(!((CodePanel)jTabbedPane1.getSelectedComponent()).askToSave()){
            return;
        }

        jTabbedPane1.remove(jTabbedPane1.getSelectedIndex());
        if(jTabbedPane1.getTabCount() == 0){
            toggleNoWindowsMenus(false);
        }
        updateTitle();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        ((CodePanel)jTabbedPane1.getSelectedComponent()).copy();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        try {
            ((CodePanel)jTabbedPane1.getSelectedComponent()).paste();
        }catch (Exception _e) {
            _e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        try {
            ((CodePanel)jTabbedPane1.getSelectedComponent()).cut();
        }catch (Exception _e) {
            _e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        JOptionPane.showMessageDialog(this, TITLE + ". Designed in UPB. See http://www.phd.arh.pub.ro");
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
       if(!HelpFrame.isOpened()){
           new HelpFrame();
       }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON3){
            jPopupMenu1.show(jTabbedPane1, evt.getX(), evt.getY());
        }else if(evt.getButton() == java.awt.event.MouseEvent.BUTTON1){
            if(evt.getClickCount() == 2){
                jMenuItem1ActionPerformed(null);
            }
            if(jTabbedPane1.getTabCount() != 0){
                ((CodePanel)jTabbedPane1.getSelectedComponent()).requestFocusInWindow();
                updateTitle();
            }
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        jMenuItem3ActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        jMenuItem10ActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        jMenuItem5ActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        ((CodePanel)jTabbedPane1.getSelectedComponent()).undo();
        updateUndoStates();
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        ((CodePanel)jTabbedPane1.getSelectedComponent()).redo();
        updateUndoStates();
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jTabbedPane1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentShown
        updateUndoStates();
        updateTitle();
    }//GEN-LAST:event_jTabbedPane1ComponentShown

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        for(int i=0; i<jTabbedPane1.getTabCount(); i++){
            CodePanel _panel = (CodePanel)jTabbedPane1.getComponentAt(i);
            _panel.setLineNumbersVisible(jCheckBoxMenuItem1.getState());
        }
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        CodePanel _panel = (CodePanel)jTabbedPane1.getSelectedComponent();
        if(_panel != null){
            _panel.getFileContent();
        }
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        jTextPane1.setText("");
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        startExecute(new Emulator());
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        ExecutionEnvironment _executionEnvironment = executionGui.getExecutionEnvironment();
        if(_executionEnvironment == null){
            JOptionPane.showMessageDialog(this, "No simulation in progress.");
            return;
        }
        if(statisticsWindow != null){
            statisticsWindow.dispose();
        }
        statisticsWindow = new StatisticsGui(_executionEnvironment.getBeamStatistics());
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        CodePanel.setHighLight(jCheckBoxMenuItem2.isSelected());
        for(int i=0; i<jTabbedPane1.getTabCount(); i++){
            CodePanel _panel = (CodePanel)jTabbedPane1.getComponentAt(i);
            _panel.updateHighlight();
        }
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jDialog1.setVisible(false);
        //readSerialConf();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jDialog1.setVisible(false);
        //writeSerialConf();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem25ActionPerformed
        jDialog4.setLocationRelativeTo(null);
        jTextField2.setText(GuiConfig.config.SERVER_ADDRESS);
        jTextField5.setText(String.valueOf(GuiConfig.config.SERVER_PORT));
        jDialog4.setVisible(true);
    }//GEN-LAST:event_jMenuItem25ActionPerformed

    private void jMenuItem27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem27ActionPerformed
        ExecutionGui.lastGui.toggleSerialWindow();
    }//GEN-LAST:event_jMenuItem27ActionPerformed

    private void jMenuItem28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem28ActionPerformed
        try {
            client.disconnect();
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error communicating with server.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        setFPGAButtonState(FPGA_DISCONNECTED);
        System.out.print("Disconnected from FPGA server.\n");
    }//GEN-LAST:event_jMenuItem28ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       jDialog2.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String _fileName = "NewCodeFile" + getNewFileCurrentIndex();
        CodePanel _panel = null;
        if(jRadioButton2.isSelected()){
            _panel = new AsmCodePanel(this);
        }else{
            _panel = new CCodePanel(this);
        }
        jTabbedPane1.add(_panel, _fileName);
        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount() - 1);
        toggleNoWindowsMenus(true);
        _panel.setLineNumbersVisible(jCheckBoxMenuItem1.getState());
        updateTitle();
        jDialog2.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem29ActionPerformed
        if(!System.getProperty("os.name").equals(LINUX_OS_ID)){
            JOptionPane.showMessageDialog(this, "Compile option only available on Linux OS.");
            return;
        }

        jMenuItem3ActionPerformed(evt);

        if(!(jTabbedPane1.getSelectedComponent() instanceof CCodePanel)){
            JOptionPane.showMessageDialog(this, "Compile option only available for C code.");
            return;
        }
        String _newAsmFile = null;
        try {
            _newAsmFile = runGCC(((CodePanel) jTabbedPane1.getSelectedComponent()).getFileName());
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        if(_newAsmFile == null){
            JOptionPane.showMessageDialog(this, "Compilation failed, see console for more info.");
            return;
        }
        try {
            for(int i=0; i<jTabbedPane1.getTabCount(); i++){
                if(_newAsmFile.equals(((CodePanel)jTabbedPane1.getComponentAt(i)).getFileName())){
                    jTabbedPane1.setSelectedIndex(i);
                    ((CodePanel)jTabbedPane1.getComponentAt(i)).askToReload();
                    return;
                }
            }

            jTabbedPane1.addTab(_newAsmFile.substring(_newAsmFile.lastIndexOf(File.separator) + 1), new AsmCodePanel(this, _newAsmFile));
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount() - 1);
        } catch (IOException ex) {
           ex.printStackTrace();
        }
        System.gc();
    }//GEN-LAST:event_jMenuItem29ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jDialog3.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        GuiConfig.config.GCC_PATH = jTextField1.getText();
        GuiConfig.config.GCC_OPTIMIZATION_LEVEL = jComboBox7.getSelectedIndex();
        GuiConfig.config.INCLUDE_PATH = jTextField4.getText();
        try{
            GuiConfig.config.stackSize = parseStackSize(jTextField3.getText());
            jDialog3.setVisible(false);
        }catch(RuntimeException _re){
            JOptionPane.showMessageDialog(this, "Invalid stack size. Please specify byte size in the following format: 128k, 2m, etc.");
        }
        //jDialog3.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jMenuItem30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem30ActionPerformed
        jTextField1.setText(GuiConfig.config.GCC_PATH == null ? "" : GuiConfig.config.GCC_PATH);
        jTextField4.setText(GuiConfig.config.INCLUDE_PATH == null ? "" : GuiConfig.config.INCLUDE_PATH);
        jComboBox7.setSelectedIndex(GuiConfig.config.GCC_OPTIMIZATION_LEVEL);
        jTextField3.setText(parseStackSize(GuiConfig.config.stackSize));
        jDialog3.setLocationRelativeTo(this);
        jDialog3.setVisible(true);
    }//GEN-LAST:event_jMenuItem30ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        JFileChooser _fileChooser = new JFileChooser(".");
        _fileChooser.setDialogTitle("Select Compiler File");
        _fileChooser.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f){
                return f.getAbsolutePath().endsWith("cc1") || f.getAbsolutePath().endsWith("cc1plus") ||
                        f.isDirectory();
            }

            @Override
            public String getDescription(){
                return "cc1, cc1plus";
            }
        });

        if(_fileChooser.showOpenDialog(jDialog3) == JFileChooser.APPROVE_OPTION){
            try {
                jTextField1.setText(_fileChooser.getSelectedFile().getCanonicalPath());
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jSplitPane1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jSplitPane1PropertyChange
        if(evt.getPropertyName().equals(JSplitPane.DIVIDER_LOCATION_PROPERTY)){
            GuiConfig.config.dividerLocation = jSplitPane1.getDividerLocation();
        }
    }//GEN-LAST:event_jSplitPane1PropertyChange

    private void jMenuItem31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem31ActionPerformed
        JFileChooser _fileChooser = new JFileChooser(".");
        _fileChooser.setDialogTitle("Select File");
        _fileChooser.setDialogType(JFileChooser.OPEN_DIALOG);
        _fileChooser.setCurrentDirectory(new File(GuiConfig.config.BIN_PATH));
        _fileChooser.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f){
                return f.isDirectory() || f.getName().endsWith(".png");
            }

            @Override
            public String getDescription(){
                return ".png";
            }
        });

         try {
            if(_fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
                String _value = JOptionPane.showInputDialog("Insert address:");
                if(_value == null){
                    return;
                }
                byte[] _buffer = ImageUtils.loadBitmap(_fileChooser.getSelectedFile());
                //int _code = (new FPGAWrapper()).writeDDR(_buffer, Long.decode(_value).intValue(), _buffer.length);
                client.loadBinary(_buffer, Long.decode(_value).intValue());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unable to load binary: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            setFPGAButtonState(FPGA_DISCONNECTED);
        }
    }//GEN-LAST:event_jMenuItem31ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        startExecute(new Simulator());
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    void startExecute(ExecutionEnvironment _executionEnvironment){
        Vector<Program> _programList = null;
        try{
            _programList = assembleRequestedPrograms();
        }catch(Exception _e){
            _e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Unable to assemble and link. Make sure you're linking against required libs. " + _e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        if(_programList == null){
            return;
        }

        try{
            _executionEnvironment.init();
            _executionEnvironment.assignGui(executionGui);
           executionGui.reset();

            for(int i=0; i<_programList.size(); i++){
                _executionEnvironment.loadProgram(_programList.elementAt(i));
                executionGui.loadFile(_programList.elementAt(i).getSourceFileName());
            }
            _executionEnvironment.boot();

            executionGui.updateMemoryBase();
            //executionGui.reset();
            executionGui.setVisible(true);
            executionGui.updateCurrentInstructionLine();

            executionGui.resetButtonState(true);

            executionGui.updateCycleCount(10);
        }catch(RuntimeException _e){
            _e.printStackTrace();
            JOptionPane.showMessageDialog(this, _e.getMessage());
        }
    }

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        jDialog5.setVisible(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        if(jList2.getModel().getSize() == 0){
            JOptionPane.showMessageDialog(this, "Select at least one file to assemble.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        listSelected = true;
        jDialog5.setVisible(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        Object[] _selected = jList1.getSelectedValues();
        for(int i=0; i<_selected.length; i++){
            ((DefaultListModel)jList2.getModel()).addElement(_selected[i]);
            ((DefaultListModel)jList1.getModel()).removeElement(_selected[i]);
        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        Object[] _selected = jList2.getSelectedValues();
        for(int i=0; i<_selected.length; i++){
            ((DefaultListModel)jList1.getModel()).addElement(_selected[i]);
            ((DefaultListModel)jList2.getModel()).removeElement(_selected[i]);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        jList1.setSelectionInterval(0, jList1.getModel().getSize() - 1);
        jButton10ActionPerformed(evt);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jTextPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextPane1MouseClicked
        if(evt.getButton() == MouseEvent.BUTTON3 && evt.getClickCount() == 1){
            jPopupMenu2.show(jTextPane1, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTextPane1MouseClicked

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        JFileChooser _fileChooser = new JFileChooser(".");
        _fileChooser.setDialogTitle("Select Include Directory");
        _fileChooser.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f){
                return f.isDirectory();
            }

            @Override
            public String getDescription(){
                return "";
            }
        });
        _fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if(_fileChooser.showOpenDialog(jDialog3) == JFileChooser.APPROVE_OPTION){
            try {
                jTextField4.setText(_fileChooser.getSelectedFile().getCanonicalPath());
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        jDialog6.setVisible(false);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        GuiConfig.config.LINK_MALLOC = jCheckBox1.isSelected();
        GuiConfig.config.LINK_PTHREAD = jCheckBox2.isSelected();
        GuiConfig.config.LINK_STDIO = jCheckBox3.isSelected();
        GuiConfig.config.LIBS_PATH = jTextField6.getText();
        jDialog6.setVisible(false);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem22ActionPerformed
        jCheckBox1.setSelected(GuiConfig.config.LINK_MALLOC);
        jCheckBox2.setSelected(GuiConfig.config.LINK_PTHREAD);
        jCheckBox3.setSelected(GuiConfig.config.LINK_STDIO);
        jTextField6.setText(GuiConfig.config.LIBS_PATH);
        jDialog6.setVisible(true);
    }//GEN-LAST:event_jMenuItem22ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        JFileChooser _fileChooser = new JFileChooser(".");
        _fileChooser.setDialogTitle("Select File");
        _fileChooser.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f){
                return f.getAbsolutePath().endsWith(".s") || f.getAbsolutePath().endsWith(".asm") ||
                        f.isDirectory();
            }

            @Override
            public String getDescription(){
                return ".s, .asm";
            }
        });

        if(_fileChooser.showOpenDialog(jDialog5) == JFileChooser.APPROVE_OPTION){
            try {
                //jTextField1.setText(_fileChooser.getSelectedFile().getCanonicalPath());
                ((DefaultListModel)jList1.getModel()).addElement(_fileChooser.getSelectedFile().getCanonicalPath());
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        JFileChooser _fileChooser = new JFileChooser(".");
        _fileChooser.setDialogTitle("Select Library Folder");
        _fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        _fileChooser.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f){
                return f.isDirectory();
            }

            @Override
            public String getDescription(){
                return "";
            }
        });

        if(_fileChooser.showOpenDialog(jDialog6) == JFileChooser.APPROVE_OPTION){
            try {
                jTextField6.setText(_fileChooser.getSelectedFile().getCanonicalPath());
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        JFileChooser _fileChooser = new JFileChooser(".");
        _fileChooser.setDialogTitle("Select File");
        _fileChooser.setDialogType(JFileChooser.SAVE_DIALOG);
        _fileChooser.setCurrentDirectory(new File(GuiConfig.config.OUTPUT_PATH));
        _fileChooser.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f){
                return true;
            }

            @Override
            public String getDescription(){
                return "";
            }
        });

        try {
            if(_fileChooser.showOpenDialog(jDialog6) == JFileChooser.APPROVE_OPTION){
                assembleRequestedPrograms(new File(_fileChooser.getSelectedFile().getCanonicalPath()));

                if(!listSelected){
                    return;
                }

                GuiConfig.config.OUTPUT_PATH = _fileChooser.getSelectedFile().getParent();
                linker.generateFiles();
                JOptionPane.showMessageDialog(this, "Assembly succesfull", "Done", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unable to assemble: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
        String _regex = "";
        do{
            _regex = JOptionPane.showInputDialog(this, "Insert regex to find", _regex);
            if(_regex != null){
                if(!((CodePanel)jTabbedPane1.getSelectedComponent()).find(_regex)){
                    _regex = null;
                }
            }
        }while(_regex != null);
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void jMenuItem32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem32ActionPerformed
       JFileChooser _fileChooser = new JFileChooser(".");
        _fileChooser.setDialogTitle("Select File");
        _fileChooser.setDialogType(JFileChooser.SAVE_DIALOG);
        _fileChooser.setCurrentDirectory(new File(GuiConfig.config.BIN_PATH));
        _fileChooser.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f){
                return true;
            }

            @Override
            public String getDescription(){
                return "";
            }
        });

         try {
            if(_fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
                String _address = JOptionPane.showInputDialog("Insert address:");
                if(_address == null){
                    return;
                }
                byte[] _buffer = client.saveBinary(Long.decode(_address).intValue(), ImageUtils.DEFAULT_IMAGE_SIZE * ImageUtils.DEFAULT_IMAGE_SIZE * 2);
                ImageUtils.saveBitmap(_fileChooser.getSelectedFile(), _buffer);
                //GuiConfig.config.BIN_PATH = _fileChooser.getSelectedFile().getParent();
                
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unable to save binary: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();

        }
    }//GEN-LAST:event_jMenuItem32ActionPerformed

    private void jMenuItem33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem33ActionPerformed
        try {
            client.reset();
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error communicating with FPGA server:" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            setFPGAButtonState(FPGA_DISCONNECTED);
        }
    }//GEN-LAST:event_jMenuItem33ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem24ActionPerformed
       JFileChooser _fileChooser = new JFileChooser(".");
        _fileChooser.setDialogTitle("Select File");
        _fileChooser.setDialogType(JFileChooser.OPEN_DIALOG);
        _fileChooser.setCurrentDirectory(new File(GuiConfig.config.BIN_PATH));
        _fileChooser.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f){
                return f.isDirectory() || f.getName().endsWith(".bin");
            }

            @Override
            public String getDescription(){
                return ".bin";
            }
        });

         try {
            if(_fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
                String _value = JOptionPane.showInputDialog("Insert address:");
                if(_value == null){
                    return;
                }
                byte[] _buffer = new byte[(int)_fileChooser.getSelectedFile().length()];
                FileInputStream _fileInputStream = new FileInputStream(_fileChooser.getSelectedFile());
                _fileInputStream.read(_buffer);
                _fileInputStream.close();
                //int _code = (new FPGAWrapper()).writeDDR(_buffer, Long.decode(_value).intValue(), _buffer.length);
                //GuiConfig.config.BIN_PATH = _fileChooser.getSelectedFile().getParent();
                client.loadBinary(_buffer, Long.decode(_value).intValue());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unable to load binary: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();

        }
    }//GEN-LAST:event_jMenuItem24ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jDialog4.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try{
            GuiConfig.config.SERVER_PORT = Integer.parseInt(jTextField5.getText());
            GuiConfig.config.SERVER_ADDRESS = jTextField2.getText();
            jDialog4.setVisible(false);
        }catch(NumberFormatException _nfe){
            JOptionPane.showMessageDialog(this, "Invalid port number", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton8ActionPerformed



    private void jMenuItem26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem26ActionPerformed
        try {
            client = new FPGAConnectionClient(GuiConfig.config.SERVER_ADDRESS, GuiConfig.config.SERVER_PORT);
            setFPGAButtonState(FPGA_CONNECTED);
            System.out.print("Connected to FPGA server.\n");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Cannot connect to server: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }catch(ClassNotFoundException _cnfe){
            JOptionPane.showMessageDialog(this, "Invalid Command object received. Update, compile and restart server.", "Error", JOptionPane.ERROR_MESSAGE);
            _cnfe.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem26ActionPerformed

    private void jMenuItem34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem34ActionPerformed
        try {
            JFileChooser _fileChooser = new JFileChooser();
            _fileChooser.showOpenDialog(this);
            File _file = _fileChooser.getSelectedFile();
            byte[] _buffer = null;
            if(_file != null){
                _buffer = ImageUtils.loadBitmap(_file);
            }else{
                return;
            }
            
            _fileChooser.showSaveDialog(this);
            _file = _fileChooser.getSelectedFile();
            if(_file != null){
                FileOutputStream _outputStream = new FileOutputStream(_file);
                _outputStream.write(_buffer);
                _outputStream.close();
                JOptionPane.showMessageDialog(this, "File decoded succesfully", "Message", JOptionPane.INFORMATION_MESSAGE);
            }else{
                return;
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unable to decode image", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem34ActionPerformed

    public void updateTabName(CodePanel _panel, String _tabName, boolean _modified){
        if(jTabbedPane1.indexOfComponent(_panel) < 0){
            return;
        }
        if(_tabName == null){
            _tabName = jTabbedPane1.getTitleAt(jTabbedPane1.indexOfComponent(_panel));
            if(_tabName.endsWith("*")){
                _tabName = _tabName.substring(0, _tabName.length() - 1);
            }
        }else{
            _tabName = _tabName.substring(_tabName.lastIndexOf(File.separator) + 1);
        }
        jTabbedPane1.setTitleAt(jTabbedPane1.indexOfComponent(_panel), _tabName + (_modified ? "*" : ""));
        updateTitle();
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (Exception ex) {
                   ex.printStackTrace();
                }
                GuiConfig.loadConfig();
                new AssemblerGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JDialog jDialog5;
    private javax.swing.JDialog jDialog6;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem26;
    private javax.swing.JMenuItem jMenuItem27;
    private javax.swing.JMenuItem jMenuItem28;
    private javax.swing.JMenuItem jMenuItem29;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem30;
    private javax.swing.JMenuItem jMenuItem31;
    private javax.swing.JMenuItem jMenuItem32;
    private javax.swing.JMenuItem jMenuItem33;
    private javax.swing.JMenuItem jMenuItem34;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

    private String getNewFileCurrentIndex(){
           return Integer.toString(currentNewFileIndex++);
    }

    public boolean closeProgram(){
        CodePanel _panel;
        for(int i=0; i<jTabbedPane1.getTabCount(); i++){
            _panel = (CodePanel)jTabbedPane1.getComponentAt(i);
            jTabbedPane1.setSelectedIndex(i);
            if(!_panel.askToSave()){
                return false;
            }
        }

        GuiConfig.config.DIRECTORY_PATH = jFileChooser1.getCurrentDirectory();
        GuiConfig.config.OPENED_FILES = new String[jTabbedPane1.getTabCount()];
        for(int i=0; i<GuiConfig.config.OPENED_FILES.length; i++){
            GuiConfig.config.OPENED_FILES[i] = ((CodePanel)jTabbedPane1.getComponentAt(i)).getFileName();
        }
        GuiConfig.config.highLightEnabled = CodePanel.highlight;
        GuiConfig.config.state = this.getExtendedState();
        GuiConfig.config.size = this.getBounds();
        GuiConfig.saveConfig();
        return true;
    }

    public void updateUndoStates(){
        CodePanel _panel = (CodePanel)jTabbedPane1.getSelectedComponent();
        jMenuItem16.setEnabled(_panel.canUndo());
        jMenuItem17.setEnabled(_panel.canRedo());
    }

    private void reopenFiles() {
        for(int i=0; i<GuiConfig.config.OPENED_FILES.length; i++){
            if(GuiConfig.config.OPENED_FILES[i] != null){
                String _tabTitle = GuiConfig.config.OPENED_FILES[i];
                _tabTitle = _tabTitle.lastIndexOf(File.separator) == -1 ? _tabTitle : _tabTitle.substring(_tabTitle.lastIndexOf(File.separator) + 1);
                CodePanel _panel = null;
                try {
                    if(_tabTitle.endsWith(".c") || _tabTitle.endsWith(".cpp")){
                        _panel = new CCodePanel(this, GuiConfig.config.OPENED_FILES[i]);
                    }else{
                        _panel = new AsmCodePanel(this, GuiConfig.config.OPENED_FILES[i]);
                    }
                    
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "Unable to open file " + GuiConfig.config.OPENED_FILES[i] + "!");
                    continue;
                }
                jTabbedPane1.add(_panel, _tabTitle);
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount() - 1);
                toggleNoWindowsMenus(true);
                _panel.setLineNumbersVisible(jCheckBoxMenuItem1.getState());
            }
        }
        updateTitle();
    }

    private void updateTitle() {
        if(jTabbedPane1.getSelectedComponent() == null){
            setTitle(TITLE);
            return;
        }
        String _fileName = ((CodePanel)jTabbedPane1.getSelectedComponent()).getFileName();
        if(_fileName == null){
            _fileName = ((CodePanel)jTabbedPane1.getSelectedComponent()).getName();
        }
        setTitle(TITLE + " - " + _fileName);
    }


private void toggleNoWindowsMenus(boolean _windowsOpened) {
    jMenu2.setEnabled(_windowsOpened);
    jMenu7.setEnabled(_windowsOpened);
    jMenuItem10.setEnabled(_windowsOpened);
    jMenuItem3.setEnabled(_windowsOpened);
    jMenuItem4.setEnabled(_windowsOpened);
    jMenuItem29.setEnabled(_windowsOpened);
}

private String runGCC(String _fileName) throws IOException, InterruptedException {

    if(GuiConfig.config.GCC_PATH == null){
        consoleStream.print("Unable to find cc1 executable. Check configuration.\n");
        return null;
    }

    String _asmFileName = _fileName.substring(0, _fileName.lastIndexOf(".")) + ".s";
    System.out.print("Compiling to " + _asmFileName + "\n");

    String _command = GuiConfig.config.GCC_PATH + " -O" + GuiConfig.config.GCC_OPTIMIZATION_LEVEL + " -I" + GuiConfig.config.INCLUDE_PATH + " " + _fileName + " -o " +
            _asmFileName + " -fno-exceptions";

    System.out.println("Running command: " + _command);
    Process _gccProcess = null;
    try{
        _gccProcess = Runtime.getRuntime().exec(_command);
    }catch(Exception _e){
        System.out.println(_e.getMessage());
        return null;
    }

    String _output;

     BufferedReader stdInput = new BufferedReader(new InputStreamReader(_gccProcess.getInputStream()));
     BufferedReader stdError = new BufferedReader(new InputStreamReader(_gccProcess.getErrorStream()));

    // read the output from the command
    while ((_output = stdInput.readLine()) != null) {
        System.out.print(_output + "\n");
    }

    // read any errors from the attempted command
    while ((_output = stdError.readLine()) != null) {
        System.out.print(_output + "\n");
    }

    int _code = _gccProcess.waitFor();
    
    if(_code == 0){
        return _asmFileName;
    }else{
        return null;
    }

}
private Vector<Program> assembleRequestedPrograms() throws IOException, ErrorCode{
      return assembleRequestedPrograms(File.createTempFile("linkedSources", ".s"));
}

private Vector<Program> assembleRequestedPrograms(File _file) throws IOException, ErrorCode{
    listSelected = false;
    setupGui();
    if(!listSelected){
        return null;
    }

    DefaultListModel _model = (DefaultListModel)jList2.getModel();
    Vector<File> _files = new Vector();
    for(int i=0; i<_model.getSize(); i++){
        _files.add(new File((String)_model.elementAt(i)));
    }
    for(int i=0; i<GuiConfig.config.getLibs().length; i++){
        _files.add(new File(GuiConfig.config.getLibs()[i]));
    }

    Vector<Program> _programs = new Vector();
    linker = new Linker();
    _programs.add(linker.link(_files, _file));

    return _programs;


}


private void setupGui() {
    jList1.setModel(new DefaultListModel());
    jList2.setModel(new DefaultListModel());
    for(int i=0; i<jTabbedPane1.getTabCount(); i++){
        CodePanel _codePanel = (CodePanel)jTabbedPane1.getComponentAt(i);
        if(_codePanel instanceof AsmCodePanel){
            ((DefaultListModel)jList1.getModel()).addElement(_codePanel.getFileName());
        }
    }

    jDialog5.setLocationRelativeTo(null);
    jDialog5.setVisible(true);
}

private int parseStackSize(String _text) {
    _text = _text.toLowerCase();
    if(!_text.matches("\\d+\\.?\\d*[mk]?")){
        throw new RuntimeException();
    }

    int _multiplier = _text.endsWith("k") ? 1024 : _text.endsWith("m") ?  1024 * 1024 : 1;
    if(_multiplier == 1){
        return (int)Float.parseFloat(_text);
    }else{
        return (int)Float.parseFloat(_text.substring(0, _text.length() - 1)) * _multiplier;
    }
}

private String parseStackSize(int _value) {
    String _text = "";
    if(_value > 1024 * 1024){
        _text = String.valueOf(_value / (float)(1024 * 1024));
        if(_text.endsWith(".0")){
            _text = _text.substring(0, _text.length() - 2);
        }
        return  _text + "m";
    }else if(_value > 1024){
        _text = String.valueOf(_value / (float)(1024));
        if(_text.endsWith(".0")){
            _text = _text.substring(0, _text.length() - 2);
        }
        return  _text + "k";
    }else{
        return String.valueOf(_value);
    }
}

private void setFPGAButtonState(boolean _state) {
    jMenuItem26.setEnabled(!_state);
    jMenuItem28.setEnabled(_state);
    jMenuItem31.setEnabled(_state);
    jMenuItem32.setEnabled(_state);
    jMenuItem33.setEnabled(_state);
    jMenuItem24.setEnabled(_state);
}

public class SerialListener implements Runnable{

        InputStream in;

        public SerialListener(InputStream in )
        {
            this.in = in;
        }

        public void run ()
        {
            byte[] buffer = new byte[1024];
            int len = -1;
            try
            {
                while ( ( len = this.in.read(buffer)) > -1 )
                {
                    System.out.print(new String(buffer,0,len));
                }
            }
            catch ( IOException e )
            {
                e.printStackTrace();
            }
        }
    }

}
