
#define UINTX_DATA(a,b,c,d) 0x##a##b##c##d
#include "../../../../include/test/crypto/bsDES/utils.h"
/*
static UINT8 plaintext_p[8]
			= { 0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef};
			*/

static UINT8 plaintext_p[32 * 8]
			= {
                    0x00, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x02, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x03, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,

                    0x04, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x05, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x06, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x07, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,//8, first 64bit block

                    0x08, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x09, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x10, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x11, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,

                    0x12, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x13, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x14, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x15, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,//16

                    0x16, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x17, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x18, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x19, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,

                    0x20, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x21, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x22, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x23, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,//24

                    0x24, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x25, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x26, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x27, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,

                    0x28, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x29, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x30, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
                    0x31, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef //32
			};

    //cout <<endl << "Alternative encrypted text = "<<"85 E8 13 54 0F 0A B4 05";
#define UINTXD  UINT8D
#define UINT8D(a,b,c,d,e,f,g,h) a,b,c,d,e,f,g,h

static UINT8 cryptotext_p[32 * 8]
			= {
                UINTXD(0x9d, 0x76, 0x1c, 0x3b, 0x56, 0xa6, 0x06, 0xe6),
                UINTXD(0x85, 0xe8, 0x13, 0x54, 0x0f, 0x0a, 0xb4, 0x05),
                UINTXD(0xb8, 0x46, 0x32, 0xcf, 0x76, 0xd3, 0xa7, 0xec),
                UINTXD(0xda, 0x26, 0x92, 0x45, 0x39, 0x0e, 0x61, 0x1e),
                UINTXD(0x6d, 0xfe, 0x64, 0x90, 0x93, 0x7c, 0x09, 0x2b),
                UINTXD(0x68, 0xbe, 0x03, 0x3e, 0x1a, 0xb5, 0xf4, 0x79),
                UINTXD(0xc7, 0x13, 0x05, 0xc9, 0xef, 0x0e, 0x04, 0x98),
                UINTXD(0x0c, 0x6f, 0x53, 0x78, 0xb9, 0x1e, 0xf0, 0x4f),

                UINTXD(0xfa, 0x2a, 0x8a, 0xb4, 0xa1, 0x93, 0x29, 0xa6),
                UINTXD(0xfd, 0x84, 0x4d, 0x0d, 0x58, 0x0c, 0x63, 0x1e),
                UINTXD(0xe0, 0x6d, 0x45, 0x78, 0xcf, 0xdc, 0xdf, 0x20),
                UINTXD(0xb5, 0xa5, 0x7c, 0x50, 0x26, 0x64, 0x0a, 0xba),
                UINTXD(0x83, 0x37, 0xc5, 0xf6, 0xdd, 0xc8, 0x3f, 0x9a),
                UINTXD(0x33, 0xbc, 0x7b, 0xc6, 0x07, 0x49, 0xd8, 0x3d),
                UINTXD(0xba, 0x18, 0xf9, 0x31, 0x8e, 0x5d, 0x85, 0xb8),
                UINTXD(0xe4, 0xe8, 0xf6, 0x0a, 0xd5, 0x03, 0xde, 0x41),

                UINTXD(0x45, 0xcd, 0x84, 0xcc, 0x97, 0x97, 0x29, 0x4c),
                UINTXD(0x68, 0x80, 0x62, 0x15, 0xeb, 0x18, 0x0e, 0x11),
                UINTXD(0x2f, 0xa5, 0x5f, 0x44, 0x8f, 0xd6, 0x24, 0x28),
                UINTXD(0x81, 0x31, 0x0b, 0x47, 0xdd, 0x25, 0xc1, 0x4c),
                UINTXD(0x09, 0xc6, 0xb5, 0xe0, 0x2a, 0xb6, 0x33, 0x4c),
                UINTXD(0x98, 0xda, 0x03, 0x72, 0x77, 0xfd, 0x88, 0xcd),
                UINTXD(0xd9, 0x90, 0x4d, 0xc9, 0x25, 0xe5, 0xca, 0xc5),
                UINTXD(0x54, 0x7b, 0xb6, 0xab, 0xa4, 0x7e, 0xa5, 0x35),

                UINTXD(0x5b, 0xea, 0xdb, 0x7d, 0x0f, 0x94, 0x94, 0xca),
                UINTXD(0x4b, 0x6b, 0x91, 0x8a, 0x23, 0xc3, 0x4c, 0xb7),
                UINTXD(0x9d, 0xdb, 0x1e, 0x3f, 0xf5, 0x5a, 0x80, 0x13),
                UINTXD(0xc4, 0x48, 0xd4, 0x39, 0x50, 0x4e, 0xb4, 0xb3),
                UINTXD(0xdb, 0x52, 0x3f, 0x72, 0xd6, 0x02, 0x9e, 0xc0),
                UINTXD(0x0e, 0x24, 0x3d, 0x20, 0x29, 0x8d, 0x69, 0x69),
                UINTXD(0xcb, 0x39, 0x81, 0x03, 0xbe, 0x1d, 0x6a, 0xf6),
                UINTXD(0x63, 0xba, 0x8f, 0x00, 0x71, 0x5f, 0xfb, 0xd3)
			  };

	//char used_key[] = "13 34 57 79 9B BC DF F1";
static unsigned char	key_p[8]
			= {0x13, 0x34, 0x57, 0x79, 0x9b, 0xbc, 0xdf, 0xf1};

UINT8* getPlaintext(){    return plaintext_p;}
UINT8* getCryptotext(){    return cryptotext_p;}
UINT8* getKey(){    return key_p;}
